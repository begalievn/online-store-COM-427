[{"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/index.js":"1","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/App.js":"2","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/store/DeviceStore.js":"3","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/store/UserStore.js":"4","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/NavBar.js":"5","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/AppRouter.js":"6","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/http/userAPI.js":"7","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/routes.js":"8","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/http/index.js":"9","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/utils/consts.js":"10","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/pages/DevicePage.js":"11","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/pages/Auth.js":"12","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/pages/Shop.js":"13","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/pages/Basket.js":"14","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/pages/Admin.js":"15","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/http/deviceAPI.js":"16","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/Pages.js":"17","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/DeviceList.js":"18","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/BrandBar.js":"19","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/TypeBar.js":"20","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/modals/CreateDevice.js":"21","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/modals/CreateType.js":"22","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/modals/CreateBrand.js":"23","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/DeviceItem.js":"24","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/Logo.js":"25"},{"size":439,"mtime":1611985807000,"results":"26","hashOfConfig":"27"},{"size":860,"mtime":1611985807000,"results":"28","hashOfConfig":"27"},{"size":1298,"mtime":1611985807000,"results":"29","hashOfConfig":"27"},{"size":401,"mtime":1611985807000,"results":"30","hashOfConfig":"27"},{"size":2702,"mtime":1671133635327,"results":"31","hashOfConfig":"27"},{"size":795,"mtime":1611985807000,"results":"32","hashOfConfig":"27"},{"size":694,"mtime":1671052117095,"results":"33","hashOfConfig":"27"},{"size":774,"mtime":1611985807000,"results":"34","hashOfConfig":"27"},{"size":407,"mtime":1611985807000,"results":"35","hashOfConfig":"27"},{"size":228,"mtime":1611985807000,"results":"36","hashOfConfig":"27"},{"size":2956,"mtime":1671061463180,"results":"37","hashOfConfig":"27"},{"size":3268,"mtime":1671051569010,"results":"38","hashOfConfig":"27"},{"size":1438,"mtime":1671133635330,"results":"39","hashOfConfig":"27"},{"size":956,"mtime":1671060543086,"results":"40","hashOfConfig":"27"},{"size":1581,"mtime":1671133635329,"results":"41","hashOfConfig":"27"},{"size":1279,"mtime":1671133635329,"results":"42","hashOfConfig":"27"},{"size":801,"mtime":1611985807000,"results":"43","hashOfConfig":"27"},{"size":501,"mtime":1671060482336,"results":"44","hashOfConfig":"27"},{"size":759,"mtime":1671133635327,"results":"45","hashOfConfig":"27"},{"size":752,"mtime":1611985807000,"results":"46","hashOfConfig":"27"},{"size":6179,"mtime":1671133635328,"results":"47","hashOfConfig":"27"},{"size":1355,"mtime":1611985807000,"results":"48","hashOfConfig":"27"},{"size":1372,"mtime":1611985807000,"results":"49","hashOfConfig":"27"},{"size":1095,"mtime":1671133635327,"results":"50","hashOfConfig":"27"},{"size":320,"mtime":1671053071822,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"bf0mfr",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/index.js",[],["111","112"],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/App.js",["113"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/store/DeviceStore.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/store/UserStore.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/NavBar.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/AppRouter.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/http/userAPI.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/routes.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/http/index.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/utils/consts.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/pages/DevicePage.js",["114"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {addRating, fetchOneDevice} from \"../http/deviceAPI\";\nimport {Context} from \"../index\";\nimport {toJS} from \"mobx\";\n\nconst DevicePage = () => {\n    const {user} = useContext(Context)\n    const [device, setDevice] = useState({info: []})\n    const {id} = useParams()\n    useEffect(() => {\n        fetchOneDevice(id).then(data => setDevice(data))\n    }, [])\n    console.log({device});\n    console.log(\"user\", toJS(user));\n    \n    const handleRatingClick = async () => {\n        if(!user?._user?.id) {\n            alert(\"Авторизуйтесь чтобы добавить в избранные\");\n            return;\n        }\n        const result = await addRating(device.id, user?._user?.id);\n        if(result) {\n            let rating = device.rating + 1;\n            setDevice({...device, rating});\n            fetchOneDevice(id).then(data => setDevice(data))\n        }\n    }\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{device.name}</h2>\n                        <div\n                            onClick={handleRatingClick}\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64, cursor: 'pointer'}}\n                        >\n                            {device.rating}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\n                    >\n                        <h3>От: {device.price} сом</h3>\n                        <Button variant={\"outline-dark\"}>Добавить в избранные</Button>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex flex-column m-3\">\n                <h1>Характеристики</h1>\n                {device.info.map((info, index) =>\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\n                        {info.title}: {info.description}\n                    </Row>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\nexport default DevicePage;\n","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/pages/Auth.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/pages/Shop.js",["115","116"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\nimport BrandBar from \"../components/BrandBar\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 3).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 3).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/pages/Basket.js",["117","118","119"],"import React, {useContext, useEffect} from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport Pages from \"../components/Pages\";\nimport {Container} from \"react-bootstrap\";\nimport {getFromBasket} from \"../http/deviceAPI\";\nimport {Context} from \"../index\";\n\nconst Basket = () => {\n    const { user } = useContext(Context);\n    const { device } = useContext(Context);\n    \n    useEffect(() => {\n        getFromBasket(user._user.id).then(data => device.setDevices(data.data));\n    }, [])\n    \n    return (\n        <Container>\n            <Row className=\"mt-3\">\n                <Col md={3}>\n                    <h2>Избранные</h2>\n                </Col>\n                <Col md={9}>\n                    <DeviceList />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default Basket;\n","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/pages/Admin.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/http/deviceAPI.js",["120"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n\nexport const addRating = async (mealId, userId) => {\n    const data = await $host.put('api/device/rating/' + mealId + '/user/' + userId);\n    return data;\n}\n\nexport const getFromBasket = async (id) => {\n    const data = await $host.get('api/device/basket/' + id);\n    return data;\n}\n","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/Pages.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/DeviceList.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/BrandBar.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/TypeBar.js",["121"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/modals/CreateDevice.js",["122","123"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить блюдо\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    {/*<Dropdown className=\"mt-2 mb-2\">*/}\n                    {/*    <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>*/}\n                    {/*    <Dropdown.Menu>*/}\n                    {/*        {device.brands.map(brand =>*/}\n                    {/*            <Dropdown.Item*/}\n                    {/*                onClick={() => device.setSelectedBrand(brand)}*/}\n                    {/*                key={brand.id}*/}\n                    {/*            >*/}\n                    {/*                {brand.name}*/}\n                    {/*            </Dropdown.Item>*/}\n                    {/*        )}*/}\n                    {/*    </Dropdown.Menu>*/}\n                    {/*</Dropdown>*/}\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/modals/CreateType.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/modals/CreateBrand.js",["124"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/DeviceItem.js",[],"/Users/begaliev/Desktop/online-store-ulbi-tv/client/src/components/Logo.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":19,"column":8,"nodeType":"131","endLine":19,"endColumn":10,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":15,"column":8,"nodeType":"131","endLine":15,"endColumn":10,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"135","line":23,"column":8,"nodeType":"131","endLine":23,"endColumn":10,"suggestions":"136"},{"ruleId":"129","severity":1,"message":"135","line":30,"column":8,"nodeType":"131","endLine":30,"endColumn":65,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":15},{"ruleId":"138","severity":1,"message":"142","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":13},{"ruleId":"129","severity":1,"message":"143","line":17,"column":8,"nodeType":"131","endLine":17,"endColumn":10,"suggestions":"144"},{"ruleId":"138","severity":1,"message":"145","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":18},{"ruleId":"138","severity":1,"message":"146","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":11},{"ruleId":"138","severity":1,"message":"147","line":5,"column":36,"nodeType":"140","messageId":"141","endLine":5,"endColumn":48},{"ruleId":"129","severity":1,"message":"135","line":18,"column":8,"nodeType":"131","endLine":18,"endColumn":10,"suggestions":"148"},{"ruleId":"138","severity":1,"message":"149","line":4,"column":22,"nodeType":"140","messageId":"141","endLine":4,"endColumn":32},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["154"],["155"],"no-unused-vars","'TypeBar' is defined but never used.","Identifier","unusedVar","'Pages' is defined but never used.","React Hook useEffect has missing dependencies: 'device' and 'user._user.id'. Either include them or remove the dependency array.",["156"],"'jwt_decode' is defined but never used.","'Col' is defined but never used.","'fetchDevices' is defined but never used.",["157"],"'createType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"162","fix":"168"},"Update the dependencies array to be: [user]",{"range":"169","text":"170"},"Update the dependencies array to be: [id]",{"range":"171","text":"172"},"Update the dependencies array to be: [device]",{"range":"173","text":"174"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"175","text":"176"},"Update the dependencies array to be: [device, user._user.id]",{"range":"177","text":"178"},{"range":"179","text":"174"},[641,643],"[user]",[580,582],"[id]",[875,877],"[device]",[1107,1164],"[device.page, device.selectedType, device.selectedBrand, device]",[618,620],"[device, user._user.id]",[746,748]]